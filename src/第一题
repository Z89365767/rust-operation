trait Signal{
    type item;

    fn continued(&self) -> Self::item;
}

enum SignalType {
    RedSignal,
    GreenSignal
}

impl Signal for SignalType{
    type item = u64;

    fn continued(&self) -> Self::item{

        match self {
            SignalType::GreenSignal => {
                10
            }
            SignalType::RedSignal => {
                5
            }
        }
    }
}

fn main(){

    let rs = SignalType::RedSignal;
    let rg = SignalType::GreenSignal;

    println!("红灯持续时间为{}分钟",rs.continued());

    println!("绿灯持续时间为{}分钟",rg.continued());
}